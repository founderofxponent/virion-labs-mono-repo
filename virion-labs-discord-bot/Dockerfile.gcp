# Google Cloud Run Optimized Dockerfile for Virion Labs Discord Bot
# Based on Node.js 18 Alpine for minimal size and security

FROM node:18-alpine

# Install security updates and required packages
RUN apk add --no-cache \
    ca-certificates \
    && update-ca-certificates

# Set working directory
WORKDIR /app

# Copy package files first for better Docker layer caching
COPY package.json yarn.lock ./

# Install production dependencies only
# Use yarn for faster, reliable, reproducible builds
RUN yarn install --production --silent && \
    yarn cache clean

# Copy application source code
COPY src/ ./src/

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S discordbot -u 1001 -G nodejs

# Change ownership of app directory to non-root user
RUN chown -R discordbot:nodejs /app

# Switch to non-root user
USER discordbot

# Health check for Cloud Run readiness probes
# Cloud Run will use this to determine when the container is ready
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
  CMD node -e "const http = require('http'); \
    const options = { hostname: '127.0.0.1', port: process.env.PORT || 8080, path: '/health', timeout: 5000 }; \
    const req = http.request(options, (res) => process.exit(res.statusCode === 200 ? 0 : 1)); \
    req.on('error', () => process.exit(1)); \
    req.end();" || exit 1

# Expose the port that Cloud Run will use
# Cloud Run automatically sets the PORT environment variable
EXPOSE 8080

# Start the bot using the Cloud Run-specific entry point
CMD ["node", "src/index.gcp.js"] 